@{
    ViewData["Title"] = "Thông tin giải " + ViewBag.TournamentTitle;
    if (Model.IsCurrent == true)
    {
        ViewBag.CActive = "active";
    }
    else ViewBag.BActive = "active";
}
@model Tennis_Web.Models.TournamentTabViewModel
<hr/>
@foreach (Models.DS_Trinh item in ViewBag.LevelList)
{
    string title = "Giải " + ViewBag.TournamentTitle + " - Trình " + @item.Trinh;
    <div class="row ml-2">
        <a asp-action="LevelInfo" asp-route-isCurrent="@Model.IsCurrent" asp-route-trinhID="@item.Id" asp-route-detailedTitle="@title" asp-route-model="null">
            • Trình @item.Trinh
        </a>
    </div>
}
<ul class="nav nav-tabs mt-3">
    <li role="presentation" class="nav-link @(Model.ActiveTab == Tennis_Web.Models.Tab.Info ? "active" : string.Empty)">
        <a asp-route-tabname="Info" asp-route-isCurrent="@Model.IsCurrent" asp-route-ID="@Model.ID" asp-action="SwitchToTabs">Thông tin chung</a>
    </li>
    <li role="presentation" class="nav-link @(Model.ActiveTab == Tennis_Web.Models.Tab.Player ? "active" : string.Empty)">
        <a asp-route-tabname="Player" asp-route-isCurrent="@Model.IsCurrent" asp-route-ID="@Model.ID" asp-action="SwitchToTabs">Danh sách VĐV tham gia</a>
    </li>
</ul>
<div class="tab-content mt-3">
    @switch (Model.ActiveTab)
    {
        case Tennis_Web.Models.Tab.Info:
            @await Component.InvokeAsync("Info", Model);
            break;
        case Tennis_Web.Models.Tab.Player:
            @await Component.InvokeAsync("Player", Model);
            break;
        default:
            break;
    }
</div>