@{
    ViewData["Title"] = "Thông tin giải đấu";
}
@model Tennis_Web.Models.TournamentTabViewModel
<ul class="nav nav-tabs">
    <li role="presentation" class="nav-link @(Model.ActiveTab == Tennis_Web.Models.Tab.Parameter ? "active" : string.Empty)">
        <a asp-route-tabname="Parameter" asp-route-isCurrent="@Model.IsCurrent" asp-route-TrinhID="@Model.TrinhID" asp-action="SwitchToTabs">Tham số giải đấu</a>
    </li>
    <li role="presentation" class="nav-link @(Model.ActiveTab == Tennis_Web.Models.Tab.Player ? "active" : string.Empty)">
        <a asp-route-tabname="Player" asp-route-isCurrent="@Model.IsCurrent" asp-route-TrinhID="@Model.TrinhID" asp-action="SwitchToTabs">Danh sách VĐV</a>
    </li>
    <li role="presentation" class="nav-link @(Model.ActiveTab == Tennis_Web.Models.Tab.Division ? "active" : string.Empty)">
        <a asp-route-tabname="Division" asp-route-isCurrent="@Model.IsCurrent" asp-route-TrinhID="@Model.TrinhID" asp-action="SwitchToTabs">Bốc thăm chia bảng</a>
    </li>
</ul>
<div class="tab-content mt-3">
    @switch (Model.ActiveTab)
    {
        case Tennis_Web.Models.Tab.Parameter:
            @await Component.InvokeAsync("Parameter", Model);
            break;
        case Tennis_Web.Models.Tab.Player:
            @await Component.InvokeAsync("Player", Model);
            break;
        case Tennis_Web.Models.Tab.Division:
            @await Component.InvokeAsync("Division", Model);
            break;
        default:
            break;
    }
</div>